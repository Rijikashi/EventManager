services:

  test_db:
    image: mysql:8.0
    ports:
      - 3306:3306
    networks:
      - test
    environment:
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: eventmanager_test
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p ${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --port=3306

  test_backend:
    build: ./backend
    ports:
      - 3000:3000
    volumes:
      - ./backend:/app
    networks:
      - test
    depends_on:
      test_db:
        condition: service_healthy
    environment:
      DATABASE_USERNAME: ${DB_HOST}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_HOST: test_db
      SQL_DATABASE: eventmanager_test
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      RAILS_ENV: test
      RACK_ENV: test
    command:  >
      sh -c "
        echo 'in docker-compose test yaml file' &&
        bundle exec rake db:create &&
        bundle exec rake db:migrate &&
        bundle exec rails db:seed &&
        bundle exec rails test TEST=test/controllers/attendee_controller_test.rb
      "

networks:
  test:
