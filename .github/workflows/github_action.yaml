name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setting up docker images
        run: |
          docker compose -f docker-compose.test.yaml build --no-cache

      - name: Running tests
        run: |
          docker compose -f docker-compose.test.yaml up test_backend

  deploy-backend:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Heroku container registry
        run: |
          echo "$HEROKU_API_KEY" | docker login --username="$HEROKU_USERNAME" --password-stdin registry.heroku.com
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_USERNAME: ${{ secrets.HEROKU_USERNAME }}

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Authenticate Heroku
        run: echo "$HEROKU_API_KEY" | heroku auth:token
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Set environment variables in Heroku
        run: |
          heroku config:set RAILS_ENV=production SECRET_KEY_BASE=$SECRET_KEY_BASE GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY --app event-manager-ruby
        env:
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
            SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
            GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY}}

      - name: Build and push Docker images to registry
        run: |
          docker build -t registry.heroku.com/event-manager-ruby/web ./backend
          docker push registry.heroku.com/event-manager-ruby/web

      - name: Release backend image
        run: |
          heroku stack:set container --app event-manager-ruby
          heroku container:release web --app event-manager-ruby
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          RAILS_ENV: production

      - name: Run Database Migrations
        run: |
          heroku run "rails db:create" --app event-manager-ruby
          heroku run "rails db:migrate" --app event-manager-ruby

  deploy-frontend:
    name: Deploy frontend
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Heroku container registry
        run: |
          echo "$HEROKU_API_KEY" | docker login --username="$HEROKU_USERNAME" --password-stdin registry.heroku.com
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_USERNAME: ${{ secrets.HEROKU_USERNAME }}

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Authenticate Heroku
        run: echo "$HEROKU_API_KEY" | heroku auth:token
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Set environment variable in Heroku
        run: |
          heroku config:set REACT_ENV=production REACT_APP_BACKEND_DEV_URL=$BACKEND_DEV_URL --app event-manager-frontend
        env:
          BACKEND_DEV_URL: ${{ secrets.BACKEND_DEV_URL }}

      - name: Build and push Docker images to registry
        run: |
          docker build --build-arg REACT_APP_BACKEND_DEV_URL=$BACKEND_DEV_URL -t registry.heroku.com/event-manager-frontend/web ./frontend
          docker push registry.heroku.com/event-manager-frontend/web
        env:
          BACKEND_DEV_URL: ${{ secrets.BACKEND_DEV_URL }}
      - name: Release frontend image
        run: |
          heroku stack:set container --app event-manager-frontend
          heroku container:release web --app event-manager-frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY}}
