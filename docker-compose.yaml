services:

  frontend:
    build: ./frontend
    ports:
      - 3001:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dev
    env_file:
      - .env
    environment:
      REACT_APP_BACKEND_DEV_URL: ${BACKEND_DEV_URL}

  backend:
    build: ./backend
    ports:
      - 3000:3000
    volumes:
      - ./backend:/app
    networks:
      - dev
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_USERNAME: ${DB_HOST}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_HOST: db
      SQL_DATABASE: eventmanager_dev
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      RAILS_ENV: development
      RACK_ENV: development
    command:  >
      sh -c "
        echo 'in docker-compose yaml file' &&
        bundle exec rake db:create &&
        bundle exec rake db:migrate &&
        bundle exec rails s -e development -b 0.0.0.0
      "

  db:
    image: mysql:8.0
    volumes:
      - event_db:/var/lib/mysql
    env_file:
      - .env
    ports:
      - 3306:3306
    networks:
      - dev
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: eventmanager_dev
      MYSQL_USER: ${DB_HOST}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p ${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  event_db:
networks:
  dev:
