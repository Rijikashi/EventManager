services:

  frontend:
    build: ./frontend
    ports:
      - 3001:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dev
    env_file:
      - .env
    environment:
      REACT_APP_BACKEND_DEV_URL: ${BACKEND_DEV_URL}
    command: >
      sh -c "
        npm start
      "

  backend:
    build: ./backend
    ports:
      - 3000:3000
    volumes:
      - ./backend:/app
    networks:
      - dev
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/eventmanager_dev
      DATABASE_HOST: db
      DATABASE_USERNAME: ${DB_USER}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      SQL_DATABASE: eventmanager_dev
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      RACK_ENV: development
    command:  >
      sh -c "
        echo 'in docker-compose yaml file' &&
        bundle exec rake db:create &&
        bundle exec rake db:migrate &&
        bundle exec rails s -e development -b 0.0.0.0
      "

  db:
    image: postgres:13
    volumes:
      - event_db:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - dev
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: eventmanager_dev
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d eventmanager_dev"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  event_db:
networks:
  dev:
